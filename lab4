import numpy as np
X=np.array(([2,9],[1,5],[3,6]),dtype=float)
y=np.array(([92],[86],[89]),dtype=float)
X=X/np.amax(X,axis=0)
y=y/100
def sigmoid(X):
    return 1/(1+np.exp(-X))
def sigmoid_grad(X):
    return X*(1-X)
epoch=10000
eta=0.2
input_neurons=2
hidden_neurons=3
output_neurons=1
wh=np.random.uniform(size=(input_neurons,hidden_neurons))
bh=np.random.uniform(size=(1,hidden_neurons))
wout=np.random.uniform(size=(hidden_neurons,output_neurons))
bout=np.random.uniform(size=(1,output_neurons))

for i in range(epoch):
    h_ip=np.dot(X,wh)+bh
    h_act=sigmoid(h_ip)
    o_ip=np.dot(h_act,wout)
    output=sigmoid(o_ip)
    
    eo=y-output
    outgrad=sigmoid_grad(output)
    d_output=eo*outgrad
    
    eh=d_output.dot(wout.T)
    hiddengrad=sigmoid_grad(h_act)
    d_hidden=eh*hiddengrad
    wout += h_act.T.dot(d_output)*eta
    wh += X.T.dot(d_hidden)*eta
    
print("normalized input:\n"+ str(X))
print("actual output:\n"+ str(y))
print("predicted output:\n",output)
